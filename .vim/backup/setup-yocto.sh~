#! /bin/bash

set -x

source $(dirname $(realpath ${BASH_SOURCE[0]}))/include/defines.sh

# =============================================================================
#  Internal defines
# =============================================================================

SCRIPT_DIRECTORY="$(dirname $(realpath $0))"
MIRRORS_PATH="${SCRIPT_DIRECTORY}/setup-yocto-mirror"

# Generate local command line based on yocto_applications
LOCAL_CMDLINE_OPTS="--sstate-mirrors ''"
REMOTE_CMDLINE_OPTS=""
for application in ${!REPOSITORIES_YOCTO_APPLICATION[@]}; do
  # Compute path from url
  fullurl="$(echo "${REPOSITORIES_URL[${application}]}")"
  subdir="$(echo "${REPOSITORIES_URL[${application}]}" | sed -E "s;^${GIT_REPOSITORIES}/;; ; s;\.git$;;")"
  path="file://${MIRRORS_PATH}/${subdir}"

  # Get setup-yocto option name
  optname="${REPOSITORIES_YOCTO_APPLICATION[${application}]}"

  # Compute command-line args to append
  LOCAL_CMDLINE_OPTS="${LOCAL_CMDLINE_OPTS} --${optname} ${path}"
  REMOTE_CMDLINE_OPTS="${REMOTE_CMDLINE_OPTS} --${optname} ${fullurl}"
done

# =============================================================================
#  Caller options
# =============================================================================

# =============================================================================
#  common.sh inputs
# =============================================================================

# Mandatory
#   Syntax : COMMONSCRIPT_REPOSITORIES="URL1;OPTION1=VAL1;OPTION2=VAL2 URL2;OPTION1=VAL1 ..."
#   List of repositories to download. The follow-up repositories are merged
#   to the first one if "subdir" option is specified.
#   The following options can be specified:
#   - srcrev : Use specified commit hash
#   - branch : Use specified branch
#   - path : Download the repository at path
#   - tag : Use specified tag
#   - subdir : When merging repositories, use the subdirectory subdir
COMMONSCRIPT_REPOSITORIES+=" ${REPOSITORIES_URL["setup-yocto"]};branch=${REPOSITORIES_BRANCH["setup-yocto"]};path=${SCRIPT_DIRECTORY}/setup-yocto;subdir="
COMMONSCRIPT_REPOSITORIES+=" ${REPOSITORIES_URL["lphm-configuration"]};branch=${REPOSITORIES_BRANCH["lphm-configuration"]};path=${SCRIPT_DIRECTORY}/lphm-configuration;subdir=setup-yocto"
COMMONSCRIPT_REPOSITORIES+=" ${REPOSITORIES_URL["hv3-configuration"]};branch=${REPOSITORIES_BRANCH["hv3-configuration"]};path=${SCRIPT_DIRECTORY}/hv3-configuration;subdir=setup-yocto"

# Optional
#   Syntax : COMMONSCRIPT_PROPAGATE_TAG=OPTION
#   Option used to specify tag in target script for --tags propagation
#   If empty, tag propagation is unused
COMMONSCRIPT_PROPAGATE_TAG="--tag"

# Optional
#   Syntax : COMMONSCRIPT_PROPAGATE_BRANCH=(true|false)
#   Option used to specify branch in target script for --branches propagation
#   If empty, branch propagation is unused
COMMONSCRIPT_PROPAGATE_BRANCH="--branch"

# Optional
#   Syntax : COMMONSCRIPT_TARGET_SCRIPT="PATH_TO_TARGET_SCRIPT"
#   Script to run after fetch + merge steps
COMMONSCRIPT_TARGET_SCRIPT="${SCRIPT_DIRECTORY}/setup-yocto/setup-yocto.sh"

# Optional
#   Syntax : COMMONSCRIPT_CONFS_HELP="MESSAGE"
#   Message displayed as a help message
COMMONSCRIPT_CONFS_HELP="This script calls generic setup-yocto.sh to build image"

# Optional
#   Syntax : COMMONSCRIPT_VARS="VAR1:VAR1_NEWNAME VAR2 VAR3:VAR3_NEWNAME"
#   Variables to export to the COMMONSCRIPT_TARGET_SCRIPT (all configs)
#   These variables can be renamed using the following syntax:
#     ENV_VAR_NAME:NEW_ENV_VAR_NAME
COMMONSCRIPT_VARS+=""

# Optional
#   Syntax : COMMONSCRIPT_AVAILABLE_CONFS["confname"]="Description"
#   Add a 'shortcut' for a way to call the COMMONSCRIPT_TARGET_SCRIPT
declare -A COMMONSCRIPT_AVAILABLE_CONFS
COMMONSCRIPT_AVAILABLE_CONFS["hv3-zeus"]="Official HV3 TRANS image (FOR HV3 BOARD)"
COMMONSCRIPT_AVAILABLE_CONFS["hv3-zeus-dbg"]="Official HV3 TRANS image (FOR HV3 BOARD) + debugs"
COMMONSCRIPT_AVAILABLE_CONFS["hv3-zeus-qemu"]="HV3 TRANS image for Qemu"

# Optional
#   Syntax : COMMONSCRIPT_CONFS_OPTS["confname"]="OPTIONS"
#   COMMONSCRIPT_TARGET_SCRIPT options for the shortcut
declare -A COMMONSCRIPT_CONFS_OPTS
COMMONSCRIPT_CONFS_OPTS["hv3-zeus"]="--conf hv3-zeus ${REMOTE_CMDLINE_OPTS}"
COMMONSCRIPT_CONFS_OPTS["hv3-zeus-dbg"]="--conf hv3-zeus --serial-debug --debug-tweaks ${REMOTE_CMDLINE_OPTS}"
COMMONSCRIPT_CONFS_OPTS["hv3-zeus-qemu"]="--machine qemuarm-vahm --conf hv3-zeus --serial-debug --debug-tweaks ${REMOTE_CMDLINE_OPTS}"
# Optional
#   Syntax : COMMONSCRIPT_CONFS_CMDS["confname"]="CMD1;CMD2;"
#   Commands to run before COMMONSCRIPT_TARGET_SCRIPT
declare -A COMMONSCRIPT_CONFS_CMDS
COMMONSCRIPT_CONFS_CMDS["hv3-zeus-qemu"]="${SCRIPT_DIRECTORY}/qemu-setup-flash.sh all --init ; ${SCRIPT_DIRECTORY}/qemu-gpios-ui.sh init"

# Optional
#   Syntax : COMMONSCRIPT_CONFS_VARS["confname"]="VAR1:VAR1_NEWNAME VAR2 VAR3:VAR3_NEWNAME"
#   Variables to export to the COMMONSCRIPT_TARGET_SCRIPT (config-specific)
#   These variables can be renamed using the following syntax:
#     ENV_VAR_NAME:NEW_ENV_VAR_NAME
declare -A COMMONSCRIPT_CONFS_VARS

# Add local-* configurations for hv3 targets
for l_conf in $(IFS=$'\n'; grep -E "^hv3-" <<< "${!COMMONSCRIPT_AVAILABLE_CONFS[*]}"); do
  COMMONSCRIPT_AVAILABLE_CONFS["local-${l_conf}"]="${COMMONSCRIPT_AVAILABLE_CONFS["${l_conf}"]} (Local build)"
  COMMONSCRIPT_CONFS_CMDS["local-${l_conf}"]="${COMMONSCRIPT_CONFS_CMDS["${l_conf}"]}"
  COMMONSCRIPT_CONFS_VARS["local-${l_conf}"]="${COMMONSCRIPT_CONFS_VARS["${l_conf}"]}"
  COMMONSCRIPT_CONFS_OPTS["local-${l_conf}"]="${COMMONSCRIPT_CONFS_OPTS["${l_conf}"]} ${LOCAL_CMDLINE_OPTS}"
done

# =============================================================================
#  common.sh call
# =============================================================================

# Include common interface
source ${SCRIPT_DIRECTORY}/include/common.sh

