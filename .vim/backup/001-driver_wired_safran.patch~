--- a/src/drivers/driver_wired.c	2019-08-07 13:25:25.000000000 +0000
+++ b/src/drivers/driver_wired.c	2019-11-19 11:47:38.686921139 +0000
@@ -29,6 +29,11 @@
 #include <sys/sockio.h>
 #endif /* __sun__ */
 
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <sys/file.h>
+#include <fcntl.h>
+
 #ifdef _MSC_VER
 #pragma pack(push, 1)
 #endif /* _MSC_VER */
@@ -392,6 +397,92 @@
 	os_free(drv);
 }
 
+static int wired_sta_set_flags(void *priv, const u8 *addr,
+				     unsigned int total_flags, unsigned int flags_or,
+				     unsigned int flags_and)
+{
+	int fd, fdlock;
+	if (flags_or & WPA_STA_AUTHORIZED)
+	{
+		/* LAN is authorized
+		 * The authentication succeded, so we advertise it by modifying the
+		 * acct-authorized-eth file. It will alert a systemd service that the firewall
+		 * can accept the new client
+		 */
+		if ((fdlock = creat("/var/services/acct-authorized/acct-authorized-eth.lock", S_IRUSR | S_IWUSR)) < 0)
+		{
+			wpa_printf(MSG_ERROR,
+				   "Error cannot open file /var/services/acct-authorized/acct-authorized-eth.lock\n");
+			return 1;
+		}
+		flock(fdlock, LOCK_EX);
+		if ((fd = creat("/var/services/acct-authorized/acct-authorized-eth", S_IRUSR | S_IWUSR)) < 0)
+		{
+			wpa_printf(MSG_ERROR,
+				   "Error cannot open file /var/services/acct-authorized/acct-authorized-eth\n");
+			return 1;
+		}
+		write(fd, "1", 1);
+		flock(fdlock, LOCK_UN);
+		close(fdlock);
+		close(fd);
+		return 0;
+	} else
+	{
+		/* LAN is unauthorized
+		 * The authentication has failed, so we advertise it by modifying the
+		 * acct-authorized-eth file. It will alert a systemd service that the
+		 * firewall should block the user, just to be sure
+		 */
+		if ((fdlock = creat("/var/services/acct-authorized-eth.lock", S_IRUSR | S_IWUSR)) < 0)
+		{
+			wpa_printf(MSG_ERROR,
+				   "Error cannot open file /var/services/acct-authorized-eth.lock\n");
+			return 1;
+		}
+		flock(fdlock, LOCK_EX);
+		if ((fd = creat("/var/services/acct-authorized-eth", S_IRUSR | S_IWUSR)) < 0)
+		{
+			wpa_printf(MSG_ERROR,
+				   "Error cannot open file /var/services/acct-authorized-eth\n");
+			return 1;
+		}
+		write(fd, "0", 1);
+		flock(fdlock, LOCK_UN);
+		close(fdlock);
+		close(fd);
+		return 0;
+	}
+}
+
+static int wired_sta_deauth(void *priv, const u8 *own_addr, const u8 *addr,
+				     u16 reason_code)
+{
+	/* LAN is unauthorized
+	 * The authentication has expired, so we advertise it by modifying the
+	 * eth-helicom-event file. It will alert a systemd service that the
+	 * firewall should be relaunched, just to be sure
+	 */
+	int fd, fdlock;
+	if ((fdlock = creat("/var/services/acct-authorized-eth.lock", S_IRUSR | S_IWUSR)) < 0)
+	{
+		wpa_printf(MSG_ERROR,
+			   "Error cannot open file /var/services/acct-authorized-eth.lock\n");
+		return 1;
+	}
+	flock(fdlock, LOCK_EX);
+	if ((fd = creat("/var/services/acct-authorized-eth", S_IRUSR | S_IWUSR)) < 0)
+	{
+		wpa_printf(MSG_ERROR,
+			   "Error cannot open file /var/services/acct-authorized-eth\n");
+		return 1;
+	}
+	write(fd, "0", 1);
+	flock(fdlock, LOCK_UN);
+	close(fd);
+	close(fdlock);
+	return 0;
+}
 
 const struct wpa_driver_ops wpa_driver_wired_ops = {
 	.name = "wired",
@@ -404,4 +495,6 @@
 	.get_capa = driver_wired_get_capa,
 	.init = wpa_driver_wired_init,
 	.deinit = wpa_driver_wired_deinit,
+  .sta_set_flags = wired_sta_set_flags,
+  .sta_deauth = wired_sta_deauth,
 };
