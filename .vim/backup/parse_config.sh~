#!/bin/sh
#--------------------------------------------------------------------------------
# Script that parse freeradius configuration with data from os config file
#--------------------------------------------------------------------------------

#--------------------------------------------------------------------------------
# Constants
#--------------------------------------------------------------------------------
DHCP_OSCFG_FILE=/var/oscfg/com_hv3_ip.conf
FILTER_OSCFG_FILE=/var/oscfg/com_auth_ext.conf
REVOCATION_OSCFG_FILE=/var/oscfg/gse_revocation_list.pem
CA_CONF_FILE=/var/autcfg/auth_ext_auth_cer.pem
DHCP_CONF_FILE=/var/services/freeradius/dhcp
FILTER_CONF_FILE=/var/services/freeradius/check-eap-tls

#--------------------------------------------------------------------------------
# DHCP
#--------------------------------------------------------------------------------
parse_dhcp() {
    # whatever happens if the default file does not exist we've 
    # got an unrecoverable error. Then, exit with an error
    if [ ! -f "${DHCP_CONF_FILE}" ]; then
        echo "[FATAL] Default config file not found: ${DHCP_CONF_FILE}"
        exit 1
    fi

    if [ ! -f "${DHCP_OSCFG_FILE}" ]; then
        echo "[NOTICE] ${DHCP_OSCFG_FILE} not found: use default"
        return
    fi

    IPV4_ADDR="$(grep -Eo '([0-9]*\.){3}[0-9]*' ${DHCP_OSCFG_FILE})"
    IPV6_ADDR="$(grep inet6 ${DHCP_OSCFG_FILE})"

    # paranoia check
    if [[ ! -z "${IPV4_ADDR}" && ! -z "${IPV6_ADDR}" ]]; then
        echo "[NOTICE] Found ipv4 AND ipv6: use default"
        return
    fi

    # performing actual replacement 
    if [[ ! -z "${IPV4_ADDR}" ]]; then
        sed -i "s/\(.*&DHCP-Your-IP-Address = \).*/\1${IPV4_ADDR}/" ${DHCP_CONF_FILE}
    elif [[ ! -z "${IPV6_ADDR}" ]]; then
        sed -i "s/\(.*&DHCP-Your-IP-Address = \).*/\1${IPV6_ADDR}/" ${DHCP_CONF_FILE}
    fi
}

#--------------------------------------------------------------------------------
# Common name filtering
#--------------------------------------------------------------------------------
parse_filter() {
    local if_content="{\n\t\tupdate config {\n\t\t\tAuth-Type = Accept\n\t\t}\n\t\treturn\n\t}\n"

    # whatever happens if the default file does not exist we've 
    # got an unrecoverable error. Then, exit with an error
    if [ ! -f "${FILTER_CONF_FILE}" ]; then
        echo "[FATAL] Default config file not found: ${FILTER_CONF_FILE}"
        exit 1
    fi
   
    if [ ! -f "${FILTER_OSCFG_FILE}" ]; then
        echo "[NOTICE] ${FILTER_OSCFG_FILE} not found: use default"
        return
    fi
  
    # remove windows carriage return
    sed -i 's/\r//' ${FILTER_OSCFG_FILE}

    while read line;do
        local common_name="$(echo ${line} | sed -n 's,^CN=\(.*\),\1,p')"
        
        if [ -z "${common_name}" ]; then
            echo -e "[NOTICE] Unexpected line: ${line}"
            continue
        fi
        
        echo -e "[NOTICE] Add ${common_name} to authorized Common Name"
        local to_insert="\tif ( &TLS-Client-Cert-Common-Name =~ /${common_name}/ ) "${if_content}
        sed -i "/# === Authorized CN will be inserted here ===/a\ ${to_insert}" ${FILTER_CONF_FILE}
    done < ${FILTER_OSCFG_FILE}
}

#--------------------------------------------------------------------------------
# Revocation list
#--------------------------------------------------------------------------------
add_crl() {
    if [ ! -f "${REVOCATION_OSCFG_FILE}" ]; then
        echo "[FATAL] Revocation list not found: ${REVOCATION_OSCFG_FILE}"
        exit 1
    fi

    # freeradius expect to find the list concatenated to certificate
    # authority file. It would result in an error it does not.
    cat ${REVOCATION_OSCFG_FILE} >> ${CA_CONF_FILE}
}

#--------------------------------------------------------------------------------
# Main entry
#--------------------------------------------------------------------------------
parse_dhcp
parse_filter
