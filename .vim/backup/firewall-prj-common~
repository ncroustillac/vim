#! /bin/sh

# This file is sourced by firewall-prj and firewall-auth to provide the
# following variables and functions :

ETHEXT="ethext"

# Current mode
#MODEFILE="/var/services/modes/current-mode"

# Get current mode
#CURRENT_MODE="$(cat ${MODEFILE} 2>/dev/null)"

# -----------------------------------------------------------------------------
# COMPUTE SOURCE ADDRESS
# -----------------------------------------------------------------------------

#SSH_REMOTE_ADDR="@IF_EXT_UOD_ADDR_RMT@"
ETHEXT_ADDR="147.138.26.15"
WLAN0_ADDR="147.138.26.16"
PMAT_ADDR="147.138.26.17"
HOSTAPD_ADDR="172.128.2.30"
FREERADIUS_ADDR="172.128.2.20"
ETH_WEBEXT_INT="172.128.3.11"
ETH_WEBEXT_EXT="172.128.3.10"
ETH_WEBAS_INT="172.128.4.11"
ETH_WEBAS_EXT="172.128.4.10"
ETH_EXT_HOST="172.128.2.2"
ETH_EXT_EXT="172.128.2.1"
WEB_PORT=3000


# -----------------------------------------------------------------------------
# Retrieve nft forward handle
# -----------------------------------------------------------------------------

# Retrieve logging handle
NFT_HANDLE_FORWARD="$(nft list chain ip filter forward -n -a | sed -n "s;^.*jump LOGGING\s*#\s*handle\s*\([0-9]\+\).*$;\1;p")"
NFT_FORWARD_HEADER="nft add rule ip filter forward"

if [ -n "${NFT_HANDLE_FORWARD}" ]; then
  NFT_FORWARD_HEADER="nft insert rule ip filter forward position ${NFT_HANDLE_FORWARD}"
fi

# -----------------------------------------------------------------------------
# Firewall rules for uod
# -----------------------------------------------------------------------------

f_enablewebrules(){
    if [ "$1" == "eth" ]; then
        # wired rule
        nft add rule ip filter forward iifname ethext oifname ethhost ip daddr ${ETH_WEBEXT_INT} ip saddr ${PMAT_ADDR} tcp dport ${WEB_PORT} counter accept
        nft add rule ip filter forward iifname ethhost oifname ethext ip saddr ${ETH_WEBEXT_INT} ip daddr ${PMAT_ADDR} tcp sport ${WEB_PORT} counter accept
        nft add rule nat prerouting ip daddr ${ETHEXT_ADDR} tcp dport ${WEB_PORT} counter dnat ${ETH_WEBEXT_INT}
        nft add rule nat postrouting ip saddr ${ETH_WEBEXT_INT} counter snat ${ETHEXT_ADDR} tcp sport ${WEB_PORT}
        nft add rule ip filter input iifname ethext udp dport 67-68 counter accept comment \"dhcp\"
        nft add rule ip filter output oifname ethext udp dport 67-68 counter accept comment \"dhcp\"
    elif [ "$1" == "wifi" ]; then
        # wifi rules
        nft add rule ip filter forward iifname wlan0 oifname ethhost ip daddr ${ETH_WEBEXT_INT} ip saddr ${PMAT_ADDR} tcp dport ${WEB_PORT} counter accept
        nft add rule ip filter forward iifname ethhost oifname wlan0 ip saddr ${ETH_WEBEXT_INT} ip daddr ${PMAT_ADDR} tcp sport ${WEB_PORT} counter accept
        nft add rule nat prerouting ip daddr ${WLAN0_ADDR} tcp dport ${WEB_PORT} counter dnat ${ETH_WEBEXT_INT}
        nft add rule nat postrouting ip saddr ${ETH_WEBEXT_INT} counter snat ${WLAN0_ADDR} tcp sport ${WEB_PORT}
        nft add rule ip filter input iifname wlan0 udp dport 67-68 counter accept comment \"dhcp\"
        nft add rule ip filter output oifname wlan0 udp dport 67-68 counter accept comment \"dhcp\"
    fi
}
