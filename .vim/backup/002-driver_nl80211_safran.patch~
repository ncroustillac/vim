--- hostapd-2.9/src/drivers/driver_nl80211.c	2019-08-07 15:25:25.000000000 +0200
+++ hostapd-2.9/src/drivers/driver_nl80211_patched.c	2023-04-14 16:00:37.948000000 +0200
@@ -4770,6 +4770,7 @@
 static int wpa_driver_nl80211_sta_remove(struct i802_bss *bss, const u8 *addr,
 					 int deauth, u16 reason_code)
 {
+	int fd, fdlock;
 	struct wpa_driver_nl80211_data *drv = bss->drv;
 	struct nl_msg *msg;
 	int ret;
@@ -4796,6 +4797,34 @@
 	if (drv->rtnl_sk)
 		rtnl_neigh_delete_fdb_entry(bss, addr);
 
+    // The authentication has expired, so we advertise it by modifying the
+	// ext-network-helicom-event file. It will alert a systemd service
+	// that the firewall should be relaunched, just to be sure
+	if ((fdlock = creat("/var/services/acct-authorized/acct-authorized-wifi.lock", S_IRUSR | S_IWUSR)) < 0)
+	{
+		wpa_printf(MSG_ERROR,
+			   "Error cannot open file /var/services/acct-authorized/acct-authorized-wifi.lock\n");
+		goto sta_remove_ret;
+	}
+
+	flock(fdlock, LOCK_EX);
+
+	if ((fd = creat("/var/services/acct-authorized/acct-authorized-wifi", S_IRUSR | S_IWUSR)) < 0)
+	{
+		wpa_printf(MSG_ERROR,
+			   "Error cannot open file /var/services/acct-authorized/acct-authorized-wifi\n");
+		flock(fdlock, LOCK_UN);
+		close(fdlock);
+		goto sta_remove_ret;
+	}
+
+	write(fd, "0", 1);
+	flock(fdlock, LOCK_UN);
+	close(fdlock);
+	close(fd);
+
+    // return main function return code
+sta_remove_ret:
 	if (ret == -ENOENT)
 		return 0;
 	return ret;
@@ -5146,6 +5175,7 @@
 					    unsigned int flags_or,
 					    unsigned int flags_and)
 {
+	int fd, fdlock;
 	struct i802_bss *bss = priv;
 	struct nl_msg *msg;
 	struct nlattr *flags;
@@ -5156,6 +5186,67 @@
 		   bss->ifname, MAC2STR(addr), total_flags, flags_or, flags_and,
 		   !!(total_flags & WPA_STA_AUTHORIZED));
 
+	// assume that notifying the system is mandatory
+	// then process this task in first instance
+	if (flags_or & WPA_STA_AUTHORIZED)
+	{
+		// The authentication succeded, so we advertise it by modifying the
+		// acct-authorized file. It will alert a systemd service that the
+		// firewall can accept the new client
+		if ((fdlock = creat("/var/services/acct-authorized/acct-authorized-wifi.lock", S_IRUSR | S_IWUSR)) < 0)
+		{
+			wpa_printf(MSG_ERROR,
+					"Error cannot open file /var/services/acct-authorized/acct-authorized-wifi.lock\n");
+			goto set_flag_main;
+		}
+
+		flock(fdlock, LOCK_EX);
+
+		if ((fd = creat("/var/services/acct-authorized/acct-authorized-wifi", S_IRUSR | S_IWUSR)) < 0)
+		{
+			wpa_printf(MSG_ERROR,
+					"Error cannot open file /var/services/acct-authorized/acct-authorized-wifi\n");
+            
+			flock(fdlock, LOCK_UN);
+			close(fdlock);
+			goto set_flag_main;
+		}
+
+		write(fd, "1", 1);
+		flock(fdlock, LOCK_UN);
+		close(fdlock);
+		close(fd);
+	} else
+	{
+		 // The authentication has failed, so we advertise it by modifying the
+		 // acct-authorized file. It will alert a systemd service that the
+		 // firewall should block the user, just to be sure
+		if ((fdlock = creat("/var/services/acct-authorized/acct-authorized-wifi.lock", S_IRUSR | S_IWUSR)) < 0)
+		{
+			wpa_printf(MSG_ERROR,
+				   "Error cannot open file /var/services/acct-authorized/acct-authorized-wifi.lock\n");
+			goto set_flag_main;
+		}
+
+		flock(fdlock, LOCK_EX);
+
+		if ((fd = creat("/var/services/acct-authorized/acct-authorized-wifi", S_IRUSR | S_IWUSR)) < 0)
+		{
+			wpa_printf(MSG_ERROR,
+				   "Error cannot open file /var/services/acct-authorized/acct-authorized-wifi\n");
+			flock(fdlock, LOCK_UN);
+			close(fdlock);
+			goto set_flag_main;
+		}
+
+		write(fd, "0", 1);
+		flock(fdlock, LOCK_UN);
+		close(fdlock);
+		close(fd);
+	}
+
+    // keep going to actual part of set flag function
+set_flag_main:
 	if (!(msg = nl80211_bss_msg(bss, 0, NL80211_CMD_SET_STATION)) ||
 	    nla_put(msg, NL80211_ATTR_MAC, ETH_ALEN, addr))
 		goto fail;
